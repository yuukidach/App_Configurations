set nocompatible "关闭vi的一致性模式 避免以前版本的一些Bug和局限
filetype off     " required!

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required! 
Plugin 'VundleVim/Vundle.vim'


" My Plugins here:
" 主题
Plugin 'altercation/vim-colors-solarized'
" 代码自动补全
Plugin 'Valloric/YouCompleteMe'
" 文件树
Plugin 'scrooloose/nerdtree'
Plugin 'kien/ctrlp.vim'
" 状态栏插件powerline
Plugin 'Lokaltog/vim-powerline'
" C++语法高亮增强
Plugin 'octol/vim-cpp-enhanced-highlight'
" 接口与实现快速切换
Plugin 'derekwyatt/vim-fswitch'
" 语法检查
Plugin 'vim-syntastic/syntastic'
" 标签侧边栏
Plugin 'majutsushi/tagbar'
" indexer依赖的插件一
Plugin 'vim-scripts/vimprj'
" indexer依赖的插件二
Plugin 'vim-scripts/DfrankUtil'
" 自动生成标签
Plugin 'vim-scripts/indexer.tar.gz'
" 缩进关联
Plugin 'nathanaelkane/vim-indent-guides'


" original repos on github
Plugin 'tpope/vim-fugitive' 
Plugin 'Lokaltog/vim-easymotion'
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
Plugin 'tpope/vim-rails.git'
" vim-scripts repos
Plugin 'L9'
Plugin 'FuzzyFinder'
" non github repos
" Plugin 'git://git.wincent.com/command-t.git'
" ...

call vundle#end()
filetype plugin indent on     " required!  允许插件

let mapleader=";"
set number            	 " 显示行号
filetype indent on       " 自适应不同语言的智能缩进
set sw=2             	   " 缩进为两个空格
set ts=2               	 " tab宽度为2个字符
set et                	 " 将tab替换为空格
set ai                	 " 自动缩进
set shortmess=atI     	 " 启动的时候不显示那个援助XX的提示
set background=dark      " 深色背景
colorscheme solarized    " 主题选择
set hlsearch             " 搜索高亮
set incsearch            " 输入搜索内容时就显示搜索结果
set ignorecase smartcase " 搜索时忽略大小写，但在有一个或以上大写字母时仍保持对大小写敏感
set lines=35 columns=110 " 设置窗口大小
set cursorline	      	 " 高亮光标行
set laststatus=2      	 " 总是显示状态栏
let g:Powerline_colorscheme='solarized256'  " 设置状态栏主题风格
"set foldmethod=indent
set foldmethod=syntax	   " 基于缩进或语法进行代码折叠
set nofoldenable	   " 启动 vim 时关闭折叠代码
nnoremap <Leader>lw <C-W>l " 跳到右方窗口
nnoremap <Leader>hw <C-W>h " 跳到左方窗口
nnoremap <Leader>kw <C-W>k " 跳到上方窗口
nnoremap <Leader>jw <C-w>j " 跳到下方窗口




" CtrlP configurations
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'




" NERDTree configurations
nmap <F2> :NERDTreeToggle <CR>

" 通过vim-fswitch在 .cpp 和 .h 间切换
nmap <silent> <Leader>sw :FSHere<cr>




" syntastic configurations
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0





" YCM configurations
let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
nnoremap <leader>jc :YcmCompleter GoToDeclaration<CR>
" 只能是 #include 或已打开的文件
nnoremap <leader>jd :YcmCompleter GoToDefinition<CR>




" indent-guide conf
" 随 vim 自启动
let g:indent_guides_enable_on_vim_startup=1
" 从第二层开始可视化显示缩进
let g:indent_guides_start_level=2
" 色块宽度
let g:indent_guides_guide_size=1
" 快捷键 i 开/关缩进可视化
nmap <silent> <Leader>indent <Plug>IndentGuidesToggle




" tagbar conf
" 设置 tagbar 子窗口的位置出现在主编辑区的左边 
let tagbar_left=1 
" 设置显示／隐藏标签列表子窗口的快捷键。速记：identifier list by tag
nnoremap <Leader>ilt :TagbarToggle<CR> 
" 设置标签子窗口的宽度 
let tagbar_width=32 
" tagbar 子窗口中不显示冗余帮助信息 
let g:tagbar_compact=1
" 设置 ctags 对哪些代码标识符生成标签
let g:tagbar_type_cpp = {
    \ 'kinds' : [
         \ 'c:classes:0:1',
         \ 'd:macros:0:1',
         \ 'e:enumerators:0:0', 
         \ 'f:functions:0:1',
         \ 'g:enumeration:0:1',
         \ 'l:local:0:1',
         \ 'm:members:0:1',
         \ 'n:namespaces:0:1',
         \ 'p:functions_prototypes:0:1',
         \ 's:structs:0:1',
         \ 't:typedefs:0:1',
         \ 'u:unions:0:1',
         \ 'v:global:0:1',
         \ 'x:external:0:1'
     \ ],
     \ 'sro'        : '::',
     \ 'kind2scope' : {
         \ 'g' : 'enum',
         \ 'n' : 'namespace',
         \ 'c' : 'class',
         \ 's' : 'struct',
         \ 'u' : 'union'
     \ },
     \ 'scope2kind' : {
         \ 'enum'      : 'g',
         \ 'namespace' : 'n',
         \ 'class'     : 'c',
         \ 'struct'    : 's',
         \ 'union'     : 'u'
     \ }
\ }




" indexer conf
" 设置插件 indexer 调用 ctags 的参数
" 默认 --c++-kinds=+p+l，重新设置为 --c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v
" 默认 --fields=+iaS 不满足 YCM 要求，需改为 --fields=+iaSl
let g:indexer_ctagsCommandLineOptions="--c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v --fields=+iaSl --extra=+q"
